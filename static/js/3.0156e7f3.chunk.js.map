{"version":3,"sources":["components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","views/PhonebookView/PhonebookView.module.css","components/Section/Section.jsx","redux/phonebook/operations.js","redux/phonebook/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","views/PhonebookView/PhonebookView.jsx"],"names":["module","exports","Section","title","children","className","styles","section","name","number","dispatch","contact","actions","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","fetchContactRequest","get","fetchContactSuccess","fetchContactError","getContactsList","state","contacts","items","getFilter","filter","getIsLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","find","el","alert","reset","onSubmit","form","this","label","input","onChange","type","pattern","required","button","Component","connect","selectors","operations","action","changeFilter","target","filterLabel","ContactItem","onClick","item","list","length","map","PhonebookView","fetchContacts","Container","phonebookWrapper","isLoading"],"mappings":"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","file":"static/js/3.0156e7f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__zDV9b\",\"title\":\"Section_title__2hDnO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2FmM0\",\"label\":\"ContactForm_label__6o0zN\",\"input\":\"ContactForm_input__1ypCW\",\"button\":\"ContactForm_button__2NplV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__mhZ3U\",\"input\":\"Filter_input__3y9Gi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__3n6ey\",\"button\":\"ContactItem_button__18gou\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookWrapper\":\"PhonebookView_phonebookWrapper__1ODAf\"};","import styles from './Section.module.css'\r\nimport PropTypes from \"prop-types\";\r\nconst Section = ({ title, children }) => {\r\n  \r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  )\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.object]).isRequired\r\n}\r\n\r\nexport default Section;","import axios from \"axios\";\r\nimport actions from \"./actions\";\r\n//axios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(actions.fetchContactRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.fetchContactError(error)));\r\n};\r\n\r\nconst addContact = ({ name, number }) => (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(actions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.addContactError(error)));\r\n};\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n  axios\r\n    .delete(`./contacts/${id}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(actions.deleteContactError(error)));\r\n};\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, deleteContact, fetchContacts };","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getIsLoading = (state) => state.contacts.loading;\r\n\r\nconst getContactsList = (state) => state.contacts.items;\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getVisibleContacts = createSelector(\r\n  [getFilter, getContactsList],\r\n  (filter, items) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return items.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  getIsLoading,\r\n  getContactsList,\r\n  getFilter,\r\n  getVisibleContacts,\r\n};","import { Component } from 'react'\r\nimport styles from './ContactForm.module.css'\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport operations from \"../../redux/phonebook/operations\";\r\nimport selectors from \"../../redux/phonebook/selectors\";\r\n\r\nclass ContactForm extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\n  handleChange = e => {\r\n    const {name, value} = e.currentTarget\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.props.contacts.find((el) => el.name === this.state.name)) {\r\n      alert(\"already add\");\r\n      this.reset();\r\n      return;\r\n  }\r\n      this.props.onSubmit(this.state);\r\n      this.reset();\r\n};\r\n  reset = () => {\r\n    this.setState({name: '', number: ''})\r\n  }\r\n\r\n  render() {\r\n    return (<form className={styles.form} onSubmit={this.handleSubmit}>\r\n      <label className={styles.label}>Name\r\n        <input\r\n        className={styles.input}\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={styles.label}>Number\r\n        <input\r\n        className={styles.input}\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={styles.button} type='submit'>Add contact</button>\r\n    </form>)\r\n  }\r\n}\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  contacts: selectors.getContactsList(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) => dispatch(operations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);;","import styles from './Filter.module.css'\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport action from \"../../redux/phonebook/actions\";\r\nimport selectors from \"../../redux/phonebook/selectors\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.filterLabel}>Find contacts by name\r\n    <input className={styles.input} type=\"text\" value={value} onChange={onChange}/>\r\n  </label>\r\n)\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  value: selectors.getFilter(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(action.changeFilter(e.target.value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import styles from './ContactItem.module.css'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactItem = ({ id, name, number, onClick }) => {\r\n  return (\r\n    <li className={styles.item}>{name}: {number}\r\n      <button className={styles.button} type='button' onClick={()=>{onClick(id)}}>Delete</button>\r\n    </li>\r\n  )\r\n}\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default ContactItem;","import ContactItem from '../ContactItem'\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport operations from \"../../redux/phonebook/operations\";\r\nimport selectors from \"../../redux/phonebook/selectors\";\r\n\r\nconst ContactList = ({ list, onClick }) => {\r\n  return ((list.length ?\r\n    (\r\n    <ul>\r\n      {list.map(item => (\r\n        <ContactItem\r\n          key={item.id}\r\n          id={item.id}\r\n          onClick={onClick}\r\n          name={item.name}\r\n          number={item.number} />\r\n      ))\r\n      }\r\n    </ul>\r\n  ):(<p>No matches found</p>)))\r\n}\r\nContactList.propTypes = {\r\n  list: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  list: selectors.getVisibleContacts(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onClick: (id) => dispatch(operations.deleteContact(id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);;","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Container from \"../../components/Container\";\r\nimport Section from \"../../components/Section\";\r\nimport ContactForm from \"../../components/ContactForm\";\r\nimport Filter from \"../../components/Filter\";\r\nimport ContactList from \"../../components/ContactList\";\r\nimport selectors from \"../../redux/phonebook/selectors\";\r\nimport operations from \"../../redux/phonebook/operations\";\r\nimport styles from \"./PhonebookView.module.css\";\r\n\r\nexport class PhonebookView extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div className={styles.phonebookWrapper}>\r\n          <Section className={\"formSection\"} title={\"Phonebook\"}>\r\n            <ContactForm />\r\n          </Section>\r\n\r\n          <Section className={\"contactsSection\"} title={\"Contacts\"}>\r\n            <Filter />\r\n            {this.props.isLoading && <p>Loading...</p>}\r\n            <ContactList />\r\n          </Section>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoading: selectors.getIsLoading(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(operations.fetchContacts()),\r\n});\r\n\r\nPhonebookView.propTypes = {\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookView);"],"sourceRoot":""}